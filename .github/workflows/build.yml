name: SnapIter

on:
  push:
    branches:
      - main

jobs:
  npm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm install


  dockerbuild:
    needs: npm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get commit count
        id: commitcount
        run: echo "count=$(git rev-list --count HEAD)" >> $GITHUB_OUTPUT

      - name: Build the Docker image
        run: |
          VERSION=${{ steps.commitcount.outputs.count }}
          echo "Building version $VERSION"
          docker build \
            --build-arg NEXT_PUBLIC_MAPTILER_KEY=${{ secrets.NEXT_PUBLIC_MAPTILER_KEY }} \
            -t registry.bestanden.online/snapiter-frontend:latest \
            -t registry.bestanden.online/snapiter-frontend:$VERSION \
            -t rg.nl-ams.scw.cloud/snapiter/frontend:latest \
            -t rg.nl-ams.scw.cloud/snapiter/frontend:$VERSION .

      # - name: Docker login to Scaleway
      #   env:
      #     SCW_SECRET_KEY: ${{ secrets.scw_secret_key }}
      #   run: docker login -u nologin -p="$SCW_SECRET_KEY" rg.nl-ams.scw.cloud/snapiter
      # - name: Publish Docker image to Scaleway
      #   run: docker push rg.nl-ams.scw.cloud/snapiter/frontend:latest && docker push rg.nl-ams.scw.cloud/snapiter/frontend:$VERSION

      - name: Docker login to registry
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: docker login -u registry -p="$DOCKER_PASSWORD" https://registry.bestanden.online

      - name: Publish dockerimage
        run: |
          VERSION=${{ steps.commitcount.outputs.count }}
          docker push registry.bestanden.online/snapiter-frontend:latest
          docker push registry.bestanden.online/snapiter-frontend:$VERSION

  dockerbuild_cache:
    needs: npm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build cache Docker image
        run: |
          docker build \
            -f cache/Dockerfile \
            -t registry.bestanden.online/snapiter-cache:latest \
            cache/
      - name: Docker login to registry
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: docker login -u registry -p="$DOCKER_PASSWORD" https://registry.bestanden.online
      - name: Publish cache docker image
        run: docker push registry.bestanden.online/snapiter-cache:latest

  # deploy-scw:
  #   needs: dockerbuild
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy to Scaleway
  #       env:
  #         SCW_DEPLOY_TOKEN: ${{ secrets.scw_deploy_token }}
  #       run: |
  #         curl -X POST \
  #         -H "X-Auth-Token: $SCW_DEPLOY_TOKEN" \
  #         https://api.scaleway.com/containers/v1beta1/regions/nl-ams/containers/54580a8f-0e83-4a02-8c8f-551651540061/deploy


  deploy_ssh:
    needs: [dockerbuild, dockerbuild_cache]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .ssh directory
        run: mkdir -p ~/.ssh

      - name: Create SSH private key file
        run: echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa

      - name: Set permissions for the private key
        run: chmod 600 ~/.ssh/id_rsa

      - name: Add SSH host to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Create directory and copy docker-compose.yml
        run: |
          ssh -i ~/.ssh/id_rsa -p 22 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'mkdir -p /home/deploy/snapiter/'
          scp -i ~/.ssh/id_rsa -P 22 docker-compose-prod.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/deploy/snapiter/docker-compose.yml
        
      - name: SSH into server and deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/deploy/snapiter
            docker compose pull
            docker compose down
            docker compose up -d
      